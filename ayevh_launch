# AYESEC:POST_SHS('18 lines')=9da1fc9afc1b85e1e81e78a53f97d4436d886182eec170ddd6c78ec71e64113d9ade4fd1bf969ed5bbe62baed9a575d2b5e3ccdc0383c27eb7a4b6bc71965afe
# AYESEC:STATUTORY_HEADER
if [ "${ayevdi_sourcefrom}" != "${HOME}/.ayevdi/ayevdi-sourcefrom" ]
then
  echo "AyeVDI by https://ayeai.xyz"
  echo "Copyright (C) 2019-2020 Abhishek Choudhary, Dr Srija Katta"
  echo ""
  echo "NO WARRANTY, and ZERO LIABILITY (Limited to INR 1/- only)"
  echo "Further usage of these software, artifacts or methods"
  echo "are subject to the 'latest' license agreement avaialble at"
  echo "https://raw.githubusercontent.com/ayeai/spl/master/LICENSE"
  echo ""
  echo "AyeVDI not activated. Please use the following command to"
  echo "activate AyeVDI"
  echo '  ayesh=$(tempfile) && wget https://bit.ly/ayevdi-sfrom-init -O${ayesh} -q && . ${ayesh}'
  echo ""
  exit
fi
# AYESEC:STATUTORY_HEADER_COMPLETED
# AYESEC:PREV_SHS('18 lines')=9da1fc9afc1b85e1e81e78a53f97d4436d886182eec170ddd6c78ec71e64113d9ade4fd1bf969ed5bbe62baed9a575d2b5e3ccdc0383c27eb7a4b6bc71965afe

#Copyright 2020 Abhishek Choudhary
#Dstributed under AyeAI Singularity Public License - latest version
#NO Warranty NO Liabilities
#For ACADEMIC PURPOSES only - NOT to be used in life threatening or any other critical scenarios

if [ $(which docker | wc -l) -lt 1 ]
then
  sudo apt install -y screen docker.io
fi

if [ $(groups | grep docker | wc -l) -lt 1 ]
then
  sudo groupadd docker
fi

if [ $(groups | grep docker | wc -l) -lt 1 ]
then
  sudo gpasswd -a ${USER} docker
  sudo usermod -aG docker ${USER}
  sudo service docker restart
  docker stop ayevh
  docker rm ayevh
fi

mkdir -p /home/${USER}/ayevh/work
export ayesudo='docker exec -w /root -u root -it ayevh'
export ayeexec='docker exec -w /home/ayevh/work -u ayevh -it ayevh'

#TODO: Allow forced update
if [ $(docker ps -a | grep ayevh | wc -l) -lt 1 ]
then

  docker pull ayevh/ayevh:latest

  docker stop ayevh
  docker rm ayevh

  #TODO: Optimize the service start busy loops
  screen -dmS ayevh_init docker run -v /home/${USER}/ayevh/work:/home/ayevh/work -p 8080:80 -p 9090:3306 --name ayevh -u root -w /home/ayevh -it ayevh/ayevh:latest bash
  printf "Waiting for \"AyeVH\" services to setup / update... "; while [ $(docker ps | grep ayevh | wc -l) -lt 1 ]; do printf .; sleep 1; done
  echo "AyeVH" services setup / updated

fi

docker stop ayevh
docker start ayevh
screen -dmS ayevh docker exec -it ayevh bash
printf "Waiting for \"AyeVH\" services to operationalize... "; while [ $(docker ps | grep ayevh | wc -l) -lt 1 ]; do printf .; sleep 1; done
echo Container "ayevh" started

echo Starting DB server
$ayesudo service mysql stop
$ayesudo bash -c 'ps -e | grep mysql | awk "{print $1}" | xargs kill -9 2>/dev/null'
$ayesudo bash -c 'ayedb=255; while [ $ayedb -gt 0 ]; do timeout 5 service mysql restart; ayedb=$?; sleep 1; echo .; done'

echo Starting web server
$ayesudo service apache2 stop
$ayesudo bash -c 'ps -e | grep apache2 | awk "{print $1}" | xargs kill -9 2>/dev/null'
$ayesudo bash -c 'kill -9 $(apachectl start | grep pid | cut -d" " -f3 | cut -d")" -f1) 2>/dev/null'
$ayesudo bash -c 'ayeweb=255; while [ $ayeweb -gt 0 ]; do timeout 5 service apache2 restart; ayeweb=$?; sleep 1; echo .; done'

function summary() {
  echo AyeVDI is up and running at http://${1}:8080
  echo OpenEMR on AyeVH - local run - http://${1}:8080/openemr/
  echo phpMyAdmin on AyeVH - local run - http://${1}:8080/phpmyadmin/
  
  xdg-open http://${1}:8080/openemr/
}

summary `ifconfig $(route | grep default | awk '{print $NF}') | grep inet\  | awk '{print $2}'`


